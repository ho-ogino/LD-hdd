                                ;*** AILZ80ASM *** Z-80 Assembler, version 1.0.12.0, LST:Full:4
                                ;----------------------------------------------------------------------------
                                ; X1/turbo LSX-Dodgers SASI Access Program
                                ; usage
                                ;   hdd [hdd drive] [offset] [target drive]
                                ;     hdd drive: 0 - 3(HD0〜HD3)
                                ;     offset: 2MBごとのインデックス(1で2MBの位置、2で4MBの位置を先頭として処理する。VHDの場合は0固定にする事)
                                ;     tareget drive: A-G 割り当てるドライブ
                                ;
                                ;note:
                                ; LSX-DodgersにてHDDをドライブに割り当て、読み書きするための常駐プログラムです。
                                ;
                                ; 0x100から読み込まれるCOMファイルとしてバイナリ出力する前提で作っています。
                                ; 
                                ; cf06からSASIドライブ読み書き処理が配置され、TPAの末尾(0x0006)をcf06に動かし、
                                ; cf06にはJP LDDEF(元々0x0006に書かれていたアドレス(LSX-Dodgersのシステム領域開始アドレス)) を書く事で強引に常駐させています。
                                ; 正しい方法を知りたいところです……(リロケータブルにするのしんどいので固定にしてるのがダメ？)。
                                ;
                                ; 既存のDPB(ドライブパラメータブロック)をHDD用に上書きし、
                                ; このプログラム実行後、任意の指定ドライブをHDDとしてアクセス出来るようになります。
                                ;
                                ; HDD用のDPBについては、VHD形式のファイルからBPB(BIOS Parameter Block)情報を読み込んで適切な値を設定します。
                                ; BPBが見つからない場合は、デフォルト設定として2MBおきにHDDを区切って使う状態でDPBが設定されます。
                                ; 
                                ; 現時点で、正常に全領域アクセス出来るか確認できていません。
                                ; あくまで現状、人柱版となります。
                                ;
                                
                                ;----------------------------------------------------------------------------
                                ; デフォルトBPB情報(BPB情報が存在する場合は上書きされるが、BPBが読めない場合はこの値が使われる)
                                ;----------------------------------------------------------------------------
                                ; VHD(15MB)
                                ; SCTSIZ        equ 512         ; 1セクタのサイズ
                                ; CSTSEC        equ 8           ; 1クラスタのセクタ数(512*8なので4096バイト)
                                ; RSVSEC        equ 8           ; 予備領域のセクタ数
                                ; NUMFAT        equ 2           ; FATの数
                                ; ROOTCNT       equ 512         ; ルートエントリのディレクトリエントリの数
                                ; TOTALSEC  equ 30720           ; ボリュームの総セクタ数
                                ; FATSZ     equ 12          ; 1個のFATが占めるセクタ数
                                ; HIDSEC        equ 128         ; (VHDの)隠しセクタサイズ
                                ; 
                                ; LDRSVSEC  equ 0x82            ; LDの予備FAT領域の有無と論理セクタサイズ(予備あり、512バイト)
                                
                                ;----------------------------------------------------------------------------
                                ; 2MB offset(1セクタ512バイト版)
       0200                     SCTSIZ      equ 512         ; 1セクタのサイズ
       0002                     CSTSEC      equ 2           ; 1クラスタのセクタ数(512*2で1024バイト)
       0002                     RSVSEC      equ 2           ; 予備領域のセクタ数
       0001                     NUMFAT      equ 1           ; FATの数
       00A0                     ROOTCNT     equ 160         ; ルートエントリのディレクトリエントリの数
       1000                     TOTALSEC    equ 4096            ; ボリュームの総セクタ数
       0008                     FATSZ       equ 8           ; 1個のFATが占めるセクタ数
       0000                     HIDSEC      equ 0           ; (VHDの)隠しセクタサイズ
                                
       0002                     LDRSVSEC    equ 0x02            ; LDの予備FAT領域の有無と論理セクタサイズ(予備なし、512バイト)
                                
                                ; LSX-Dodgers用にBPB情報から計算してやる
       0800                     TOTALCST    equ TOTALSEC/CSTSEC
       0002                     FATHEAD     equ HIDSEC+RSVSEC
       000A                     ROOTHEAD    equ FATHEAD+FATSZ*NUMFAT
       000A                     ROOTSCNT    equ ROOTCNT*32/SCTSIZ
       0012                     DATAHEAD    equ ROOTHEAD+ROOTSCNT-2 ; ここの計算若干怪しい(VHD版だと動かないと思われるのでBPBからの計算の方を正とする事)
                                
                                ; LSX-Dodgers内部コール
       F0F1                     _BPB2DPB    equ 0xf0f1
                                
                                ;----------------------------------------------------------------------------
                                ;
       D106                     LDSYS       equ 0xd106          ; 常駐アドレスの頭
       D306                     LDDEF       equ 0xd306          ; 既定のLDのアドレス
       0300                     PROGSZ      equ 0x300           ; 先頭(0x100)からの非常駐部のプログラムサイズ
                                
                                ;------------------------------------
000000 0100                             org 0x0100
                                ;----------------------------------------------------------------------------
       0100                     start:
                                    ; 常駐チェック(手抜き。0x0006にLDDEFが書かれていれば常駐済とする……)
000000 0100 2A0600          16      ld  hl,(0x0006)
000003 0103 7D               4      ld  a,l
000004 0104 FE06             7      cp  LDSYS & 0xff
000006 0106 2008            12      jr  nz,registhddd
000008 0108 7C               4      ld  a,h
000009 0109 FED1             7      cp  LDSYS/256
00000B 010B 2003            12      jr  nz,registhddd
00000D 010D C3AA01          10      jp  hdddcmd
                                
       0110                     registhddd:
                                    ; 常駐チェック2(0x0006にLDDEFが書かれていれば常駐する)
000010 0110 7D               4      ld  a,l
000011 0111 FE06             7      cp  LDDEF & 0xff
000013 0113 C20000          10      jp  nz,0
000016 0116 7C               4      ld  a,h
000017 0117 FED3             7      cp  LDDEF/256
000019 0119 2856            12      jr  z,registhddd1
00001B 011B FED7             7      cp  LDDEF/256+4
00001D 011D C20000          10      jp  nz,0
                                    ; セクタバッファが512バイトの場合、1024バイトに拡張する
000020 0120 2A0100          16      ld  hl,(1)
000023 0123 2E70             7      ld  l,070h
000025 0125 24               4      inc h
000026 0126 E5              11      push    hl
000027 0127 DDE1            14      pop ix
000029 0129 DD7E0B          19      ld  a,(ix+00bh) ;_MAX_SEC_SZ_H
00002C 012C FE04             7      cp  4
00002E 012E CA0000          10      jp  z,0
                                
000031 0131 DD5E0C          19      ld  e,(ix+00ch) ;_FATBF
000034 0134 DD560D          19      ld  d,(ix+00dh)
                                
000037 0137 DD6E0E          19      ld  l,(ix+00eh) ;_DTBUF
00003A 013A DD660F          19      ld  h,(ix+00fh)
                                
00003D 013D A7               4      and a
00003E 013E ED52            15      sbc hl,de
                                
000040 0140 110006          10      ld  de,512*3
000043 0143 A7               4      and a
000044 0144 ED52            15      sbc hl,de
000046 0146 C20000          10      jp  nz,0        ;_FATBFが1.5kbかチェック
                                
000049 0149 0E5F             7      ld  c,0x5f      ;ディスクバッファのフラッシュ(_FLUSH)
00004B 014B CD0500          17      call    0x0005
                                
00004E 014E 2A0600          16      ld  hl,(0x0006)
000051 0151 7E               7      ld  a,(hl)
000052 0152 C20000          10      jp  nz,0        ;jp
                                
000055 0155 F3               4      di
000056 0156 5D               4      ld  e,l
000057 0157 54               4      ld  d,h
000058 0158 15               4      dec d
000059 0159 15               4      dec d
00005A 015A 15               4      dec d
00005B 015B 15               4      dec d
00005C 015C ED530600        20      ld  (0x0006),de
000060 0160 D5              11      push    de
000061 0161 010300          10      ld  bc,3
000064 0164 EDB0                    ldir
000066 0166 DD360B04        19      ld  (ix+00bh),4 ;_MAX_SEC_SZ_H
00006A 016A DD730E          19      ld  (ix+00eh),e ;_DTBUF
00006D 016D DD720F          19      ld  (ix+00fh),d
                                
000070 0170 E1              10      pop hl
       0171                     registhddd1:
                                    ; TPA末尾をLDDEFに動かす(不気味)
                                    ; まずは現状の値をコピー
000071 0171 2207D1          16      ld  (LDSYS+1),hl
                                
                                    ; 0x0006の中身をLDDEFにする
000074 0174 2106D1          10      ld  hl,LDSYS
000077 0177 220600          16      ld  (0x0006),hl
                                
                                    ; SASI読み書き処理をTPA末尾付近(LDDEF)にコピーする
00007A 017A 210004          10      ld  hl,0x0100+PROGSZ    ; COMが0x100に読まれるので、ここがLDSYSHDRDCの先頭になる
00007D 017D 1106D1          10      ld  de,LDSYS
000080 0180 01E601          10      ld  bc,endadr-LDSYS
000083 0183 EDB0                    ldir
                                
000085 0185 0E6F             7      ld  c,0x6f      ;MSX-DOS のバージョン番号の獲得(_DOSVER)
000087 0187 CD0500          17      call    0x0005
00008A 018A 213801          10      ld  hl,0x0138
00008D 018D A7               4      and a
00008E 018E ED52            15      sbc hl,de
000090 0190 3018            12      jr  nc,hdddcmd
                                
000092 0192 3A0200          13      ld  a,(0x0002)
000095 0195 320BD1          13      ld  (BPB2DPB+2),a
000098 0198 32A001          13      ld  (b2dp1+2),a
00009B 019B 32A901          13      ld  (b2dp2+2),a
00009E 019E 2AF2F0          16  b2dp1:  ld  hl,(_BPB2DPB+1)
0000A1 01A1 220AD1          16      ld  (BPB2DPB+1),hl
0000A4 01A4 2186D1          10      ld  hl,bpb2dpb1
0000A7 01A7 22F2F0          16  b2dp2:  ld  (_BPB2DPB+1),hl
                                    ; これで常駐完了
                                
                                    ; コマンドライン解析
                                    ; hdd [drive(0-3)] [block(2MB単位)] [target drive(A-G)]
       01AA                     hdddcmd:
0000AA 01AA 1E07             7      ld  e,7
0000AC 01AC 0E1F             7      ld  c,0x1f          ;ディスク装置のパラメータの読み出し
0000AE 01AE CD0500          17      call    0x0005
0000B1 01B1 DD224003        20      ld  (dpbadr),ix
                                
                                    ; コマンドライン末尾の文字がA-Gの場合ドライブ名として扱い、対象のDPB位置を特定する
                                    ; A-Gではない場合はデフォルト H: で処理する
0000B5 01B5 218000          10      ld  hl,0x80
0000B8 01B8 7E               7      ld  a,(hl)
0000B9 01B9 85               4      add a,l     ; hl + hl + a
0000BA 01BA 6F               4      ld  l,a
0000BB 01BB 8C               4      adc a,h
0000BC 01BC 95               4      sub l
0000BD 01BD 67               4      ld  h,a
0000BE 01BE 7E               7      ld  a,(hl)
0000BF 01BF F620             7      or  0x20
0000C1 01C1 FE61             7      cp  'a'
0000C3 01C3 381A            12      jr  c,hddcmd1   ; A以下のASCII CODEの場合は無視してデフォルトF:として処理する(微妙)
0000C5 01C5 FE69             7      cp  'i'     ; A,B,C,D,E,F,G,Hのみ許す
0000C7 01C7 3805            12      jr  c,hddcmd3ok
                                
                                    ; 2: Target drive error
0000C9 01C9 0E02             7      ld  c,2
0000CB 01CB C32C03          10      jp  hdisperr
       01CE                     hddcmd3ok:
0000CE 01CE E6DF             7      and 0xdf
                                    ; 表示用にドライブ名を入れておく
0000D0 01D0 32BD03          13      ld  (targetdrv),a
                                
                                    ; 指定ドライブのDPBアドレスを算出してdpbadrに入れる
0000D3 01D3 D641             7      sub 'A'
0000D5 01D5 5F               4      ld  e,a
0000D6 01D6 0E1F             7      ld  c,0x1f          ;ディスク装置のパラメータの読み出し
0000D8 01D8 CD0500          17      call    0x0005
0000DB 01DB DD224003        20      ld  (dpbadr),ix
                                
       01DF                     hddcmd1:
                                    ; 任意のドライブのDPBをHDDのもので上書き
0000DF 01DF 21C103          10      ld  hl,hdddpb       ; コピー元のHDD用DPB
0000E2 01E2 ED5B4003        20      ld  de,(dpbadr)
0000E6 01E6 012000          10      ld  bc,32
0000E9 01E9 EDB0                    ldir
                                
0000EB 01EB 115D00          10      ld  de,0x005d   ; arg1
0000EE 01EE CD0D03          17      call    getnum
0000F1 01F1 3005            12      jr  nc,hddcmd2
                                    ; 0: Drive number error
0000F3 01F3 0E00             7      ld  c,0
0000F5 01F5 C32C03          10      jp  hdisperr
       01F8                     hddcmd2:
0000F8 01F8 7D               4      ld  a,l
                                    ; 0-3 check
0000F9 01F9 FE04             7      cp  4
0000FB 01FB 3805            12      jr  c,hddrvok
                                    ; 0: Drive number error
0000FD 01FD 0E00             7      ld  c,0
0000FF 01FF C32C03          10      jp  hdisperr
       0202                     hddrvok:
                                    ; Set Unit Number( HDD DRIVE Number 0-3 )
000102 0202 DD2A4003        20      ld  ix,(dpbadr)
000106 0206 DD7713          19      ld  (ix+0x13),a
                                
000109 0209 F5              11      push    af
                                
00010A 020A C630             7      add a,0x30      ; ドライブ名文字列の数字も変更しておく(HDD0〜HDD3)
00010C 020C DD771F          19      ld  (ix+0x1f),a
                                
00010F 020F 116D00          10      ld  de,0x006d   ; arg2
000112 0212 CD0D03          17      call    getnum
000115 0215 3006            12      jr  nc,hddcmd3
000117 0217 F1              10      pop af
                                    ; 1: Offset number error
000118 0218 0E01             7      ld  c,1
00011A 021A C32C03          10      jp  hdisperr
       021D                     hddcmd3:
00011D 021D F1              10      pop af
                                
                                    ; 0→先頭、1→先頭から2MBの位置……と、なるようにHLの値を調整してやる。1が65536なので、2MBにするには32倍してやればいい(5ビットシフトとかないんかい)
00011E 021E 29              11      add hl,hl   ; 2
00011F 021F 29              11      add hl,hl   ; 4
000120 0220 29              11      add hl,hl   ; 8
000121 0221 29              11      add hl,hl   ; 16
000122 0222 29              11      add hl,hl   ; 32
000123 0223 EB               4      ex  de,hl
000124 0224 DD730D          19      ld  (ix+HDLBA1),e
000127 0227 DD7218          19      ld  (ix+HDLBA2),d
                                
00012A 022A 11A303          10      ld  de,hdrgmsg
00012D 022D 0E09             7      ld  c,0x09
00012F 022F CD0500          17      call    0x0005
                                
                                    ; ターゲットドライブを表示
000132 0232 11BD03          10      ld  de,targetdrv
000135 0235 0E09             7      ld  c,0x09
000137 0237 CD0500          17      call    0x0005
                                
                                    ; 割り当てるHDD名を表示
00013A 023A 2A4003          16      ld  hl,(dpbadr)
00013D 023D 011C00          10      ld  bc,0x1c
000140 0240 09              11      add hl,bc
000141 0241 0604             7      ld  b,4
000143 0243 0E06             7      ld  c,0x06
       0245                     hddndsp:
000145 0245 5E               7      ld  e,(hl)
000146 0246 CD0500          17      call    0x0005
000149 0249 23               6      inc hl
00014A 024A 05               4      dec b
00014B 024B 20F8            12      jr  nz,hddndsp
                                
                                ; BPBからDPBを設定する
                                ; この時点でとりあえずSASIドライバの常駐はすんでいるので、直接ドライバの読み出し処理を使ってBPBを読み込む
00014D 024D DD7E13          19      ld  a,(ix+DPB_UNITNO)
000150 0250 CDDBD1          17      call    sasi_set_drive
                                
000153 0253 210000          10      ld  hl,0x0000       ; IMG-先頭から読む(BPB先頭)
000156 0256 CD9902          17      call    check_bpb
000159 0259 D20000          10      jp  nc,0
                                
00015C 025C 210200          10      ld  hl,0x0002       ; DSK-0x00200から読む(MSX)
00015F 025F CD9902          17      call    check_bpb
000162 0262 D20000          10      jp  nc,0
                                
000165 0265 210001          10      ld  hl,0x0100       ; VHD-0x10000バイトから読む(BPB先頭。ただし先頭64KBが隠しセクタ固定(いいのかな))
000168 0268 CD9902          17      call    check_bpb
00016B 026B D20000          10      jp  nc,0
                                
00016E 026E 217E00          10      ld  hl,0x007e       ; IMG-0x07e00バイトから読む(MBR付き)
000171 0271 CD9902          17      call    check_bpb
000174 0274 D20000          10      jp  nc,0
                                
000177 0277 219800          10      ld  hl,0x0098       ; HDI-0x09800バイトから読む
00017A 027A CD9902          17      call    check_bpb
00017D 027D D20000          10      jp  nc,0
                                
000180 0280 212001          10      ld  hl,0x0120       ; HDI-0x12000バイトから読む
000183 0283 CD9902          17      call    check_bpb
000186 0286 D20000          10      jp  nc,0
                                
000189 0289 210202          10      ld  hl,0x0202       ; NHD-0x20200バイトから読む
00018C 028C CD9902          17      call    check_bpb
00018F 028F D20000          10      jp  nc,0
                                
                                    ; BPBをオフにする
000192 0292 DDCB12A6        23      res 4,(ix+$12)  ;DPB_01_DEVICE
000196 0296 C30000          10      jp  0
                                
       0299                     check_bpb:
000199 0299 E5              11      push    hl
00019A 029A 3E08             7      ld  a,08h           ;READ
00019C 029C 1E00             7      ld  e,0
00019E 029E 0E01             7      ld  c,1         ; C   = block size(BPBは1ブロック=256バイト以内に入る)
0001A0 02A0 CDF6D1          17      call    sasi_setup_rw6
0001A3 02A3 CD17D2          17      call    sasi_cmd6_open
0001A6 02A6 3827            12      jr  c,bpbrerr
                                ;SASIデータ転送
0001A8 02A8 210040          10      ld  hl,0x4000       ; テキトーに0x4000から読む(空いてるはず)
0001AB 02AB 110001          10      ld  de,256          ; DE = trasnfer size
0001AE 02AE CD76D1          17      call    sasi_transfer
0001B1 02B1 381C            12      jr  c,bpbrerr
                                ;SASIステータス、メッセージ、バスフリー
0001B3 02B3 CD56D2          17      call    sasi_close
0001B6 02B6 3817            12      jr  c,bpbrerr
0001B8 02B8 E1              10      pop hl
                                
                                ;   0x4000からBPBが読まれている(はず)
       02B9                     bpbtodpb:
0001B9 02B9 FD210040        14      ld  iy,$4000    ; BPB
                                
0001BD 02BD FD7E00          19      ld  a,(iy+0)    ;BS_JmpBoot
0001C0 02C0 FEEB             7      cp  $eb
0001C2 02C2 2812            12      jr  z,bpbeb
0001C4 02C4 FEE9             7      cp  $e9
0001C6 02C6 2815            12      jr  z,bpbok
0001C8 02C8 FE60             7      cp  $60     ;X68K
0001CA 02CA 280A            12      jr  z,bpbeb
       02CC                     notbpb:
0001CC 02CC 37               4      scf
0001CD 02CD 9F               4      sbc a,a
0001CE 02CE C9              10      ret
                                
       02CF                     bpbrerr:
0001CF 02CF E1              10      pop hl
0001D0 02D0 FB               4      ei
0001D1 02D1 0E03             7      ld  c,3
0001D3 02D3 C32C03          10      jp  hdisperr
                                
       02D6                     bpbeb:
0001D6 02D6 FD7E02          19      ld  a,(iy+2)
0001D9 02D9 FE90             7      cp  0x90
0001DB 02DB 20EF            12      jr  nz,notbpb
       02DD                     bpbok:
0001DD 02DD FD7E0C          19      ld  a,(iy+12)   ;BPB_BytsPerSec
0001E0 02E0 B7               4      or  a
0001E1 02E1 28E9            12      jr  z,notbpb
0001E3 02E3 47               4      ld  b,a
0001E4 02E4 05               4      dec b
0001E5 02E5 A0               4      and b
0001E6 02E6 20E4            12      jr  nz,notbpb
                                
0001E8 02E8 FD7E0D          19      ld  a,(iy+13)   ;BPB_SecPerClus
0001EB 02EB B7               4      or  a
0001EC 02EC 28DE            12      jr  z,notbpb
0001EE 02EE 47               4      ld  b,a
0001EF 02EF 05               4      dec b
0001F0 02F0 A0               4      and b
0001F1 02F1 20D9            12      jr  nz,notbpb
                                
0001F3 02F3 DDCB12EE        23      set 5,(ix+$12)  ;DPB_01_DEVICE
                                    ; 隠しセクタぶんをLBAに足しておいてやる
0001F7 02F7 DD5E0C          19      ld  e,(ix+HDLBA0)
0001FA 02FA DD560D          19      ld  d,(ix+HDLBA1)
0001FD 02FD AF               4      xor a
0001FE 02FE 19              11      add hl,de
0001FF 02FF DD8E18          19      adc a,(ix+HDLBA2)
000202 0302 DD750C          19      ld  (ix+HDLBA0),l
000205 0305 DD740D          19      ld  (ix+HDLBA1),h
000208 0308 DD7718          19      ld  (ix+HDLBA2),a
00020B 030B AF               4      xor a
00020C 030C C9              10      ret
                                
       030D                     getnum:
00020D 030D 210000          10      ld  hl,0
       0310                     numloop:
000210 0310 1A               7      ld  a,(de)
000211 0311 FE20             7      cp  0x20
000213 0313 2816            12      jr  z,cmdend
                                    
000215 0315 D630             7      sub '0'
000217 0317 3811            12      jr  c,cmderr
000219 0319 FE0A             7      cp  10
00021B 031B 300D            12      jr  nc,cmderr
                                
                                ;   hlを10倍にする(初回無駄だがまあいいや)
00021D 031D 29              11      add hl,hl   ; x2
00021E 031E E5              11      push hl
00021F 031F 29              11      add hl,hl
000220 0320 29              11      add hl,hl   ; x8
000221 0321 C1              10      pop bc
000222 0322 09              11      add hl,bc   ; x10
                                
000223 0323 4F               4      ld c,a      ; hl + hl + a
000224 0324 0600             7      ld b,0
000226 0326 09              11      add hl,bc
                                
                                ;   add a,l     ; hl + hl + a   BCツブさない版？もっといい方法がありそう
                                ;   ld  l,a
                                ;   ld  a,h
                                ;   adc a,0
                                ;   ld  h,a
                                
000227 0327 13               6      inc de
000228 0328 18E6            12      jr numloop
                                
       032A                     cmderr:
00022A 032A 37               4      scf
       032B                     cmdend:
00022B 032B C9              10      ret
                                
                                ; b = error number
       032C                     hdisperr:
00022C 032C 0600             7      ld  b,0
00022E 032E CB21             8      sla c   ; c = c * 2
000230 0330 214203          10      ld  hl,hdermsg
000233 0333 09              11      add hl,bc
000234 0334 5E               7      ld  e,(hl)
000235 0335 23               6      inc hl
000236 0336 56               7      ld  d,(hl)
000237 0337 0E09             7      ld  c,0x09
000239 0339 CD0500          17      call    0x0005
00023C 033C 37               4      scf
00023D 033D C30000          10      jp  0
                                
                                ; 書き換え対象のDPBアドレス(デフォルトドライブ H:)
       0340                     dpbadr:
000240 0340 E0F2                    DW  0xf2e0
                                
                                ; エラーメッセージ群
       0342                     hdermsg:
000242 0342 4A03                    DW  hder1
000244 0344 6003                    DW  hder2
000246 0346 7703                    DW  hder3
000248 0348 8D03                    DW  hder4
       034A                     hder1:
00024A 034A 07496E76616C6964        db  7,'Invalid drive number$'
            206472697665206E    
            756D62657224        
       0360                     hder2:
000260 0360 07496E76616C6964        db  7,'Invalid offset number$'
            206F666673657420    
            6E756D62657224      
       0377                     hder3:
000277 0377 07496E76616C6964        db  7,'Invalid target drive$'
            2074617267657420    
            647269766524        
       038D                     hder4:
00028D 038D 070D0A4844442042        db  7,0x0d,0x0a,'HDD BPB read error$'
            5042207265616420    
            6572726F7224        
                                
       03A3                     hdrgmsg:
0002A3 03A3 4C44204844442063        db  'LD HDD controller v0.13', 0x0d,0x0a, '$'
            6F6E74726F6C6C65    
            722076302E31330D    
            0A24                
       03BD                     targetdrv:
0002BD 03BD 483A2024                db  'H: $'
                                
                                
                                ; ■VHD(15MB)のBPB情報(参考)
                                ; BPB_BytsPerSec バイト単位のセクタサイズ: 512
                                ; BPB_SecPerClus クラスタを構成するセクタ数？: 8 → 4kb
                                ; BPB_RsvdSecCnt 予約領域のセクタ数: 8
                                ; BPB_NumFATs FATの数: 2
                                ; BPB_RootEntCnt ルートディレクトリに含まれるディレクトリエントリの数: 512
                                ; BPB_TotSec16 ボリュームの総セクタ数: 30720
                                ; BPB_Media: F8
                                ; BPB_FATSz16 1個のFATが占めるセクタ数: 12
                                ; BPB_SecPerTrk トラック当たりのセクタ数: 63
                                ; BPB_NumHeads ヘッド数: 255
                                ; BPB_HiddSec ストレージ上でこのボリュームの手前に存在する隠れた物理セクタの数: 128 ※128*512=64KBぶんがBPB手前の領域
                                ; BPB_TotSec32 ボリュームの総セクタ数: 0 ※BPB_TotSec16を見る事
                                
                                ; HDD DPBのコピー元
       03C1                     hdddpb:
0002C1 03C1 0800                    DW  FATSZ       ; +$00 FAT領域のセクタ単位でのサイズ(1byte)
0002C3 03C3 10D1                    DW  HDRDC       ; +$02 HLが書き込まれるメモリアドレス、DEが1を1kbとしたHDD読み込み位置？
0002C5 03C5 0CD1                    DW  HDWTC       ; +$04 HLが読み込みメモリアドレス、DEが1を1kbとしたHDD書き込み位置？
0002C7 03C7 F8                      DB  $F8     ; +$06 メディアバイト(HDD)
0002C8 03C8 02                      DB  CSTSEC      ; +$07 1クラスタの論理セクタ数(1,2,4,8,16,32,64,128のみ可) 0x08
0002C9 03C9 0008                    DW  TOTALCST    ; +$08 総クラスタ数 0xefa
0002CB 03CB 00                      DB  0       ; +$0A フロッピーディスクのモード(1byte)
0002CC 03CC 0A                      DB  ROOTSCNT    ; +$0B ルートディレクトリ領域の終了の論理セクタ番号+1(1byte) 0x40
       03CD                     HDDBL:
       000C                     HDLBA0      equ $-hdddpb
0002CD 03CD 00                      DB  0       ; +$0C LBA0 / フロッピーディスクのシリンダ数(1byte)
       000D                     HDLBA1      equ $-hdddpb
0002CE 03CE 00                      DB  0       ; +$0D LBA1 / フロッピーディスクの1トラックのセクタ数(1byte) 隠しセクタ64KBをオフセットしてやる
0002CF 03CF 02                      DB  FATHEAD     ; +$0E FAT領域の先頭論理セクタ番号(1byte) 0x08
0002D0 03D0 02                      DB  LDRSVSEC    ; +$0F 予備FAT領域と論理セクタのサイズ 0x82
                                                ;   上位1ビット:予備FAT領域
                                                ;       1:使用する
                                                ;       0:使用しない
                                                ;   下位3ビット: 論理セクタのサイズ
                                                ;       1:256バイト
                                                ;       2:512バイト
                                                ;       4:1024バイト
0002D1 03D1 0A00                    DW  ROOTHEAD    ; +$10 ルートディレクトリ領域の先頭論理セクタ番号(1byte) 0x20
0002D3 03D3 29                      DB  $29     ; +$12 Device Number?? ★
       0013                     DPB_UNITNO  equ $-hdddpb
0002D4 03D4 03                  HDDDV:  DB  3       ; +$13 デバイスドライバ内におけるユニット番号(1byte)
0002D5 03D5 1200                    DW  DATAHEAD    ; +$14 データ格納領域の先頭論理セクタ番号-2クラスタ(1byte) 0x30
0002D7 03D7 0000                    DW  0       ; 
       0018                     HDLBA2      equ $-hdddpb
0002D9 03D9 0000                    DW  0       ; +$11 -> +$18 LBA2 / フロッピーディスクのセクタの最小値(1byte) ★LBA2として利用
0002DB 03DB 0000                    DW  0       ; +$1A カレントディレクトリのクラスタ番号(2bytes)
0002DD 03DD 48444430                DB  "HDD0"      ; +$1C
                                
                                ;---------------------------------------------------------------------------
                                ;SASI DRIVER
                                ;---------------------------------------------------------------------------
000300 D106                         org LDSYS,PROGSZ
                                
                                ; このアドレスが0x0006に書かれている。本来のシステムコールアドレスであるLDDEFをここで呼ぶ(いいのかこれ)
000300 D106 C306D3          10      JP  LDDEF       ; このアドレスは常駐時にツブされる
       D109                     BPB2DPB:
000303 D109 C30000          10      JP  0
                                
                                ;---------------------------------------------------------------------------
                                ;WRITE CLUSTER
                                ;in
                                ;   IX   : DPB
                                ;   C DE : cluster number
                                ;   HL   : memory address
                                ;out
                                ;   CF   : 0=no error,1=error
                                ;   C DE : next cluster
                                ;   HL   : next address
                                ;---------------------------------------------------------------------------
       D10C                     HDWTC:
000306 D10C 3E0A             7      ld  a,0Ah           ;WRITE(6)
000308 D10E 1802            12      jr  HDRWC
                                ;   db  0x01            ;SKIP 2,BC ※BCをツブしてはいけなくなったのでjrしておく
                                ;---------------------------------------------------------------------------
                                ;READ CLUSTER
                                ;in
                                ;   IX   : DPB
                                ;   C DE : cluster number
                                ;   HL   : memory address
                                ;out
                                ;   CF   : 0=no error,1=error
                                ;   C DE : next cluster
                                ;   HL   : next address
                                ;---------------------------------------------------------------------------
       D110                     HDRDC:
00030A D110 3E08             7      ld  a,08h           ;READ(6)
       D112                     HDRWC:
00030C D112 C5              11      push bc
00030D D113 D5              11      push de
00030E D114 E5              11      push hl
00030F D115 F5              11      push    af          ;SASI CMD
000310 D116 DD7E13          19      ld  a,(ix+DPB_UNITNO)
000313 D119 C5              11      push bc
000314 D11A CDDBD1          17      call    sasi_set_drive
                                ; deの単位に合わせて256バイト単位のsasi_*secsをn(1,2,4)倍する
000317 D11D EB               4      ex de,hl
000318 D11E 79               4      ld  a,c
000319 D11F DD4E0F          19      LD  c,(IX+00FH) ;DPB_0F_BPS(bit0-2:1:256バイト 2:512バイト 4:1024バイト)
       D122                     mulsec1:
00031C D122 CB19             8      rr  c
00031E D124 3804            12      jr  c,mulsec2
000320 D126 29              11      add hl,hl
000321 D127 8F               4      adc a,a
000322 D128 18F8            12      jr  mulsec1
       D12A                     mulsec2:
000324 D12A C1              10      pop bc
                                ;パーティションオフセットを加算
000325 D12B DD5E0C          19      ld  e,(ix+$0C)  ;LBA0/ フロッピーディスクのシリンダ数
000328 D12E DD560D          19      ld  d,(ix+$0D)  ;LBA1/ フロッピーディスクの1トラックのセクタ数
00032B D131 19              11      add hl,de
00032C D132 DD8E18          19      adc a,(ix+$18)  ;LBA2/ フロッピーディスクのセクタの最小値
00032F D135 384A            12      jr  c,sasi_err2
                                ;SASIコマンドを構築
000331 D137 5F               4      ld  e,a     ;EHL = sasi LBA
000332 D138 C620             7      add a,$100-$e0  ;SASIの理論アドレスは21ビットなので超えたらエラー
000334 D13A 3845            12      jr  c,sasi_err2
000336 D13C DD7E0F          19      ld  a,(ix+0x0f) ;DPB_0F_BPS(bit0-2:1:256バイト 2:512バイト 4:1024バイト)
000339 D13F E607             7      and 7
00033B D141 4F               4      ld  c,a     ;C   = block size
00033C D142 AF               4      xor a
       D143                     mulblock:
00033D D143 81               4      add a,c
00033E D144 10FD            13      djnz    mulblock
000340 D146 4F               4      ld  c,a
000341 D147 3257D1          13      ld  (tspat+2),a
000344 D14A F1              10      pop af      ;SASI CMD
                                ;   call    sasi_setup_read6
                                ;   call    sasi_setup_write6
000345 D14B CDF6D1          17      call    sasi_setup_rw6  ;READ(08) OR write(08)
                                ;SASIセレクション、コマンドフェーズ
000348 D14E CD17D2          17      call    sasi_cmd6_open
00034B D151 382F            12      jr  c,sasi_err
                                ;SASIデータ転送
00034D D153 E1              10      pop hl      ;HL = memory address
00034E D154 E5              11      push hl
00034F D155 110002          10  tspat:  ld  de,0x200    ;DE = trasnfer size
000352 D158 CD76D1          17      call    sasi_transfer
000355 D15B 3825            12      jr  c,sasi_err
                                ;SASIステータス、メッセージ、バスフリー
000357 D15D CD56D2          17      call    sasi_close
00035A D160 3820            12      jr  c,sasi_err
00035C D162 E1              10      pop hl
00035D D163 D1              10      pop de
00035E D164 C1              10      pop bc
00035F D165 3A57D1          13      ld  a,(tspat+2)
000362 D168 84               4      add a,h     ;memory addressを進める
000363 D169 67               4      ld  h,a
000364 D16A 7B               4      ld  a,e     ;セクタ位置を進める
000365 D16B 80               4      add a,b
000366 D16C 5F               4      ld  e,a
000367 D16D 7A               4      ld  a,d
000368 D16E CE00             7      adc a,0
00036A D170 57               4      ld  d,a
00036B D171 89               4      adc a,c
00036C D172 92               4      sub d
00036D D173 4F               4      ld  c,a
00036E D174 AF               4      xor a
00036F D175 C9              10      ret
                                ;---------------------------------------------------------------------------
       D176                     sasi_transfer:
000370 D176 3ACBD1          13      ld  a,(B_SASI_CMD6)
000373 D179 FE08             7      cp  08h         ;READ(6)?
000375 D17B CAC2D2          10      jp  z,sasi_rx       ;READ
000378 D17E C398D2          10      jp  sasi_tx         ;WRITE
                                
                                ;---------------------------------------------------------------------------
       D181                     sasi_err2:
00037B D181 F1              10      pop af
       D182                     sasi_err:
00037C D182 E1              10      pop hl
00037D D183 D1              10      pop de
00037E D184 C1              10      pop bc
                                ;   scf
00037F D185 C9              10      ret
                                
                                
       D186                     bpb2dpb1:
000380 D186 CD09D1          17      call    BPB2DPB
000383 D189 D0              11      ret nc
000384 D18A FD7E00          19      LD  A,(IY+0)    ;BS_JmpBoot
000387 D18D FEEB             7      CP  0EBH        ;Short jump
000389 D18F 2804            12      JR  Z,bpb2k
00038B D191 FEE9             7      CP  0E9H        ;Near jump
00038D D193 37               4      SCF
00038E D194 C9              10      RET
       D195                     bpb2k:              ;1セクタ2KB対策
00038F D195 FD7E0C          19      LD  A,(IY+12)   ;BPB_BytsPerSec
000392 D198 FE08             7      cp  8       ;1セクタ2KB
000394 D19A 37               4      scf
000395 D19B C0              11      ret nz
000396 D19C DD7E0F          19      LD  A,(IX+00FH) ;DPB_0F_BPS
000399 D19F EE0C             7      xor 0x0c
00039B D1A1 DD770F          19      LD  (IX+00FH),A ;DPB_0F_BPS
                                
00039E D1A4 DDCB0726        23      sla (IX+7)      ;DPB_07_SECPCL
                                
0003A2 D1A8 DDCB0026        23      sla (IX+0)      ;DPB_00_FATLN
0003A6 D1AC DDCB0116        23      rl  (IX+1)      ;DPB_00_FATLN
                                
0003AA D1B0 DDCB0E26        23      sla (IX+00EH)   ;DPB_0E_FATPS
                                
0003AE D1B4 DDCB1026        23      sla (IX+010H)   ;DPB_10_DIRPS
0003B2 D1B8 DDCB1116        23      rl  (IX+011H)
                                
0003B6 D1BC DDCB0B26        23      sla (IX+00BH)   ;DPB_0B_DIRSCNT
                                
0003BA D1C0 DDCB1426        23      sla (IX+014H)   ;DPB_14_ADDCL16
0003BE D1C4 DDCB1516        23      rl  (IX+015H)
0003C2 D1C8 C9              10      ret
                                
                                
                                ;SASIドライバ本体
                                    include "sasi_poll.asm"
                                ;----------------------------------------------------------------------------
                                ;X1/turbo SASI handler
                                ;
                                ;ArdSCSino-stm32を使用する場合の"./scsi-config.txt"の設定
                                ;　４行目(Mode): "1" (X1turbo)
                                ;　５行目(Wait): "0" (0 usec)
                                ;長いウェイトを設定すると動作しません
                                ;----------------------------------------------------------------------------
                                
                                ;----------------------------------------------------------------------------
                                ;X1turbo I/O assign
       0FD0                     IO_SASI_DATA        equ 0fd0h
       0FD1                     IO_SASI_STS     equ 0fd1h
       0FD1                     IO_SASI_SEL_OFF     equ 0fd1h
       0FD2                     IO_SASI_RESET       equ 0fd2h
       0FD3                     IO_SASI_SEL_ON      equ 0fd3h
                                
                                ;STS reg. bit assign
       0010                     IO_SASI_STS_MSG     equ 0x10
       0008                     IO_SASI_STS_CXD     equ 0x08
       0004                     IO_SASI_STS_IXO     equ 0x04
       0002                     IO_SASI_STS_BSY     equ 0x02
       0001                     IO_SASI_STS_REQ     equ 0x01
                                
                                ;----------------------------------------------------------------------------
                                ;work area
                                ;
       D1C9                     B_SASI_ID:
0003C3 D1C9 00                      db  00h     ;target ID byte
       D1CA                     B_SASI_CMD_SIZE:
0003C4 D1CA 06                      db  6       ;command length
                                ;command data
       D1CB                     B_SASI_CMD6:
0003C5 D1CB 08                      db  08h     ;READ 08/WRITE 0A
       D1CC                     B_SASI_CMD6_LUN_LAD2:
0003C6 D1CC 00                      db  00h     ;LUN[2:0],LAD[20:16]
       D1CD                     B_SASI_CMD6_LAD1:
0003C7 D1CD 00                      db  00h     ;LAD[15: 8]
       D1CE                     B_SASI_CMD6_LAD0:
0003C8 D1CE 00                      db  00h     ;LAD[ 7: 0]
       D1CF                     B_SASI_CMD6_NOB:
0003C9 D1CF 00                      db  00h     ;number of blocks
       D1D0                     B_SASI_CMD6_CTRL:
0003CA D1D0 00                      db  00h     ;control
0003CB D1D1 0000000000000000        db  0,0,0,0,0,0,0,0,0,0 ;max 16 bytes
            0000                
                                
                                ;----------------------------------------------------------------------------
                                ;SASI SELECT DRIVE & LUN
                                ;ドライブ番号(ID,LUN)の設定
                                ;in
                                ;    A : drive number (ID*2 +LUN)
       D1DB                     sasi_set_drive:
0003D5 D1DB 47               4      ld  b,a
0003D6 D1DC AF               4      xor a           ;LUN=0
                                ;drive number -> LUB,SASI-ID
0003D7 D1DD CB38             8      srl b
0003D9 D1DF 3002            12      jr  nc,$+4
0003DB D1E1 3E20             7      ld  a,0x20      ;LUN=1
0003DD D1E3 32CCD1          13      ld  (B_SASI_CMD6_LUN_LAD2),a
0003E0 D1E6 3E80             7      ld  a,0x80      ;SELECTION BITMASK
0003E2 D1E8 04               4      inc b
       D1E9                     SASI_id_l:
0003E3 D1E9 07               4      rlca
0003E4 D1EA 10FD            13      djnz    SASI_id_l
                                ;SASI ID set
                                ;   or  0x80        ;INITIATOR ID
0003E6 D1EC 32C9D1          13      ld  (B_SASI_ID),a
0003E9 D1EF C9              10      ret
                                
                                ;----------------------------------------------------------------------------
                                ;setup SASI WRITE(6)
                                ;in
                                ;   EHL : LogicalBlockAddress (LBA[20:0])
                                ;    C  : number of blocks
       D1F0                     sasi_setup_write6:
0003EA D1F0 3E0A             7      ld  a,0Ah           ;WRITE(6)
0003EC D1F2 1802            12      jr  sasi_setup_rw6
                                ;----------------------------------------------------------------------------
                                ;setup SASI READ(6)
                                ;in
                                ;   EHL : LogicalBlockAddress (LBA[20:0])
                                ;    C  : number of blocks
       D1F4                     sasi_setup_read6:
0003EE D1F4 3E08             7      ld  a,08h           ;READ(6)
       D1F6                     sasi_setup_rw6:
0003F0 D1F6 32CBD1          13      ld  (B_SASI_CMD6),a
0003F3 D1F9 0600             7      ld  b,0x00                  ;CTRL byte
0003F5 D1FB ED43CFD1        20      ld  (B_SASI_CMD6_NOB),bc    ;NOB,CTRL
                                ;
0003F9 D1FF 3ACCD1          13      ld  a,(B_SASI_CMD6_LUN_LAD2);LUN/LAD2
0003FC D202 E6E0             7      and 0xe0
0003FE D204 B3               4      or  e
0003FF D205 32CCD1          13      ld  (B_SASI_CMD6_LUN_LAD2),a
000402 D208 7D               4      ld  a,l                     ;swap
000403 D209 6C               4      ld  l,h
000404 D20A 67               4      ld  h,a
000405 D20B 22CDD1          16      ld  (B_SASI_CMD6_LAD1),hl
                                ;set command size
000408 D20E 3E06             7      ld  a,6
00040A D210 32CAD1          13      ld  (B_SASI_CMD_SIZE),a
00040D D213 C9              10      ret
                                
                                ;----------------------------------------------------------------------------
                                ;SASI OPEN BUS , send command
                                ;in
                                ;   HL : command data
                                ;   A  : command size
                                ;out
                                ;   CF : 1=timeout error
                                ;   A  : SASI BUS status
       D214                     sasi_cmd_n_open:
00040E D214 32CAD1          13      ld  (B_SASI_CMD_SIZE),a
       D217                     sasi_cmd6_open:
                                ;selection
000411 D217 3AC9D1          13      ld  a,(B_SASI_ID)
000414 D21A 01D30F          10      ld  bc,IO_SASI_SEL_ON
000417 D21D ED79            12      out (c),a
                                ;WAIT BUSY
000419 D21F 110202          10      ld  de,IO_SASI_STS_BSY*0x0101
00041C D222 0603             7      ld  b,3             ;タイムアウト短めに
00041E D224 CD76D2          17      call    wait_sasi_3
000421 D227 79               4      ld  a,c             ;BUS STS
000422 D228 D8              11      ret c
                                ;selection off
000423 D229 3E0F             7      ld  a,high IO_SASI_SEL_OFF
000425 D22B D3D1            11      out (low IO_SASI_SEL_OFF),a
                                ;0A : CMD 
                                ;0B : CMD & REQ
000427 D22D 160B             7      ld  d,IO_SASI_STS_CXD | IO_SASI_STS_BSY | IO_SASI_STS_REQ
000429 D22F CD72D2          17      call    wait_sasi
00042C D232 381D            12      jr  c,sasi_phase_error
                                ;command tx
00042E D234 21CBD1          10      ld  hl,B_SASI_CMD6
000431 D237 3ACAD1          13      ld  a,(B_SASI_CMD_SIZE)
000434 D23A 5F               4      ld  e,a
000435 D23B 1600             7      ld  d,0
000437 D23D CD98D2          17      call    sasi_tx
00043A D240 380F            12      jr  c,sasi_phase_error
                                ;07 : DATA_IN
                                ;03 : DATA_OUT
                                ;0F : STATUS
00043C D242 110101          10      ld  de,IO_SASI_STS_REQ*0x0101
00043F D245 CD74D2          17      call    wait_sasi_2 ;CF=tmeout error
000442 D248 3807            12      jr  c,sasi_phase_error
                                ;data phase ok
       D24A                     get_scsi_bus_status:
000444 D24A 3E0F             7      ld  a,high IO_SASI_STS
000446 D24C DBD1            11      in  a,(low IO_SASI_STS)
000448 D24E E61F             7      and 1fh     ;CF=0
00044A D250 C9              10      ret
                                ;
       D251                     sasi_phase_error:
00044B D251 CD4AD2          17      call    get_scsi_bus_status
00044E D254 37               4      scf
00044F D255 C9              10      ret
                                
                                ;----------------------------------------------------------------------------
                                ;sasi datain/dataout
                                ;----------------------------------------------------------------------------
                                
                                ;----------------------------------------------------------------------------
                                ;SASI CLOSE BUS , receive STATUS & MESSAGE
                                ;out
                                ;   CF  : 1=error
                                ;   H   : message byte
                                ;   L   : status byte
                                ;   ZF  : 1= STS==MSG==0x00
                                ;
       D256                     sasi_close:
000450 D256 160F             7      ld  d,0Fh           ;STATUS IN,REQ
000452 D258 CD68D2          17      call    sasi_rx_phase_byte
000455 D25B D8              11      ret c
000456 D25C 6F               4      ld  l,a
000457 D25D E5              11      push    hl
000458 D25E 161F             7      ld  d,1Fh           ;MSG IN,REQ
00045A D260 CD68D2          17      call    sasi_rx_phase_byte
00045D D263 E1              10      pop hl
00045E D264 D8              11      ret c
00045F D265 67               4      ld  h,a
000460 D266 B5               4      or  l
000461 D267 C9              10      ret
                                
                                ;------------------------------------
                                ;wait phase & receive byte
                                ;in:
                                ;   D : STS match byte
                                ;out
                                ;   CF  : 1=timeout
                                ;   A   : SASI receive data
       D268                     sasi_rx_phase_byte:
000462 D268 CD72D2          17      call    wait_sasi
000465 D26B D8              11      ret c
000466 D26C 3E0F             7      ld  a,high IO_SASI_DATA
000468 D26E DBD0            11      in  a,(low IO_SASI_DATA)
00046A D270 B7               4      or  a       ;CF=0
00046B D271 C9              10      ret
                                
                                ;----------------------------------------------------------------------------
                                ;SASI 条件待ち合わせ
                                ;in
                                ;   D : STS match byte
       D272                     wait_sasi:
00046C D272 1E1F             7      ld  e,1fh       ;mask all bits
                                ;in
                                ;   E : STS mask byte
       D274                     wait_sasi_2:
                                ;   ld  b,3     ;timeout count High
00046E D274 060A             7      ld  b,10        ;timeout count High
                                ;in
                                ;   B : timeout time
                                ;out
                                ;   C  : BUS STS
                                ;   CF : 1=timeout error,(reset bus)
       D276                     wait_sasi_3:
000470 D276 210000          10      ld  hl,0        ;timeout count low
       D279                     wait_sasi_l:
000473 D279 3E0F             7      ld  a,high IO_SASI_STS
000475 D27B DBD1            11      in  a,(low IO_SASI_STS)
000477 D27D 4F               4      ld  c,a         ;save STS
000478 D27E A3               4      and e           ;mask
000479 D27F BA               4      cp  d           ;comapre
00047A D280 C8              11      ret z           ;match
00047B D281 2B               6      dec hl
00047C D282 7C               4      ld  a,h
00047D D283 B5               4      or  l
00047E D284 20F3            12      jr  nz,wait_sasi_l
000480 D286 10F1            13      djnz    wait_sasi_l
                                ;   jr  sasi_reest
                                
                                ;----------------------------------------------------------------------------
                                ;reset SASI BUS
       D288                     sasi_reest:
000482 D288 01D10F          10      ld  bc,IO_SASI_SEL_OFF
000485 D28B ED79            12      out (c),a
000487 D28D 01D20F          10      ld  bc,IO_SASI_RESET
00048A D290 ED79            12      out (c),a
00048C D292 0600             7      ld  b,0
00048E D294 10FE            13      djnz    $
000490 D296 37               4      scf
000491 D297 C9              10      ret
[EOF:sasi_poll.asm:SHIFT_JIS]
                                    include "sasi_poll_tx.asm"
                                ;------------------------------------
                                ;SASI送信
                                ;in
                                ;   HL : data address
                                ;   DE : length
                                ;out
                                ;   CF : 1=timeout
       D298                     sasi_tx:
                                ;adjust 16bit to 2x8bit counter
000492 D298 14               4      inc d
000493 D299 1B               6      dec de
000494 D29A 1C               4      inc e
       D29B                     sasi_tx_req:
000495 D29B 01D00F          10      ld  bc,IO_SASI_DATA
       D29E                     sasi_tx_r:
000498 D29E 78               4      ld  a,b
000499 D29F DBD1            11      in  a,(low IO_SASI_STS)
00049B D2A1 0F               4      rrca
00049C D2A2 300D            12      jr  nc,sasi_tx_nreq
00049E D2A4 04               4      inc b
00049F D2A5 EDA3            16      outi
0004A1 D2A7 1D               4      dec e
0004A2 D2A8 C29ED2          10      jp  nz,sasi_tx_r
0004A5 D2AB 15               4      dec d
0004A6 D2AC C29ED2          10      jp  nz,sasi_tx_r
0004A9 D2AF B7               4      or  a
0004AA D2B0 C9              10      ret
                                ;------------------
                                ;wait until REQ
       D2B1                     sasi_tx_nreq:
0004AB D2B1 010000          10      ld  bc,0        ;reset timeout
       D2B4                     sasi_tx_w:
0004AE D2B4 3E0F             7      ld  a,high IO_SASI_STS
0004B0 D2B6 DBD1            11      in  a,(low IO_SASI_STS)
0004B2 D2B8 0F               4      rrca
0004B3 D2B9 38E0            12      jr  c,sasi_tx_req
0004B5 D2BB 10F7            13      djnz    sasi_tx_w
0004B7 D2BD 0D               4      dec c
0004B8 D2BE 20F4            12      jr  nz,sasi_tx_w
                                ;timeout error
0004BA D2C0 37               4      scf
0004BB D2C1 C9              10      ret
[EOF:sasi_poll_tx.asm:SHIFT_JIS]
                                    include "sasi_poll_rx.asm"
                                ;------------------------------------
                                ;SASI受信
                                ;in
                                ;   HL : data address
                                ;   DE : length
                                ;out
                                ;   CF : 1=timeout
       D2C2                     sasi_rx:
                                ;adjust 16bit counter : d=d+(e!=0)
0004BC D2C2 14               4      inc d
0004BD D2C3 1B               6      dec de
0004BE D2C4 1C               4      inc e
       D2C5                     sasi_rx_req:
0004BF D2C5 01D00F          10      ld  bc,IO_SASI_DATA
       D2C8                     sasi_rx_r:
0004C2 D2C8 78               4      ld  a,b
0004C3 D2C9 DBD1            11      in  a,(low IO_SASI_STS)
0004C5 D2CB 0F               4      rrca
0004C6 D2CC 300D            12      jr  nc,sasi_rx_nreq
0004C8 D2CE EDA2            16      ini
0004CA D2D0 04               4      inc b
0004CB D2D1 1D               4      dec e
0004CC D2D2 C2C8D2          10      jp  nz,sasi_rx_r
0004CF D2D5 15               4      dec d
0004D0 D2D6 C2C8D2          10      jp  nz,sasi_rx_r
0004D3 D2D9 B7               4      or  a
0004D4 D2DA C9              10      ret
                                ;------------------
                                ;wait until REQ
       D2DB                     sasi_rx_nreq:
0004D5 D2DB 010000          10      ld  bc,0        ;reset timeout
       D2DE                     sasi_rx_w:
0004D8 D2DE 3E0F             7      ld  a,high IO_SASI_STS
0004DA D2E0 DBD1            11      in  a,(low IO_SASI_STS)
0004DC D2E2 0F               4      rrca
0004DD D2E3 38E0            12      jr  c,sasi_rx_req
0004DF D2E5 10F7            13      djnz    sasi_rx_w
0004E1 D2E7 0D               4      dec c
0004E2 D2E8 20F4            12      jr  nz,sasi_rx_w
                                ;timeout error
0004E4 D2EA 37               4      scf
0004E5 D2EB C9              10      ret
[EOF:sasi_poll_rx.asm:SHIFT_JIS]
                                
       D2EC                     endadr:
                                
                                ;---------------------------------------------------------------------------
[EOF:hdd.asm:SHIFT_JIS]
